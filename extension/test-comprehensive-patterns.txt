# Comprehensive Security Pattern Test File
# ========================================
# This file contains realistic examples of sensitive data that should be detected and masked

## Cloud & API Secrets
## ===================

### AWS Credentials
aws_access_key_id = AKIAIOSFODNN7EXAMPLE
aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AWS_ACCOUNT_ID=123456789012
export AWS_DEFAULT_REGION=us-east-1

### AWS Resources
arn:aws:s3:::my-bucket/sensitive-data.json
arn:aws:iam::123456789012:role/AdminRole
arn:aws:ec2:us-west-2:123456789012:instance/i-0abc1234def567890
vpc-0abcdef1234567890
subnet-0123456789abcdef0
i-0abc1234def567890
sg-0123456789abcdef0

### GitHub & GitLab
GITHUB_TOKEN=ghp_1234567890abcdefghijklmnopqrstuvwxyz12
GITLAB_TOKEN=glpat-xxxxxxxxxxxxxxxxxxxx
git clone https://ghp_1234567890abcdefghijklmnopqrstuvwxyz12@github.com/user/repo.git

### Stripe
STRIPE_SECRET_KEY=sk_live_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123
STRIPE_TEST_KEY=sk_test_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123
stripe.api_key = "sk_live_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123"

### Slack
SLACK_BOT_TOKEN=xoxb-1234567890-1234567890123-abcdefghijklmnopqrstuvwx
slack_token: "xoxb-987654321-123456789012-zyxwvutsrqponmlkjihgfedcba"

### Google
GOOGLE_API_KEY=AIzaSyDaGmWKa4JsXZ5iQjLp9CZtfb3SqzXcVbN
google_maps_key: "AIzaSyBcDefGhIjKlMnOpQrStUvWxYz1234567890"

### JWT Tokens
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
jwt_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiYWJjZGVmZ2hpamtsbW5vcCIsImlhdCI6MTYxNjE2MTYxNiwiZXhwIjoxNjE2MjQ4MDE2fQ.signature_here"

## Personal Identifiers
## ====================

### Email Addresses
Contact: john.doe@company.com
Support email: support@acme-corp.co.uk
Admin: admin@internal.example.org
User registration: user.name+tag@subdomain.domain.com

### Phone Numbers
Phone: +1-555-123-4567
Mobile: (555) 987-6543
Office: 555.555.0199
International: +1 555 123 4567
Toll-free: 1-800-555-0123

### Social Security Numbers
SSN: 123-45-6789
Social Security: 987-65-4321
Employee ID: 555-44-3333

### Canadian SIN
SIN: 123-456-789
Social Insurance: 987-654-321

### Passport Numbers
Passport: US1234567
Travel doc: CA87654321
ID: GB123456789

### Credit Cards
Visa: 4111-1111-1111-1111
MasterCard: 5555-5555-5555-4444
AmEx: 3782-822463-10005
Discover: 6011-1111-1111-1117
Card number: 4000 0000 0000 0002

### IBAN
IBAN: GB82WEST12345698765432
Account: DE89370400440532013000
Bank: FR1420041010050500013M02606

## Network & Infrastructure
## =========================

### IPv4 Addresses
Server IP: 192.168.1.100
Database: 10.0.0.50
Load balancer: 172.16.0.1
Public IP: 203.0.113.42
Gateway: 192.168.0.1

### IPv6 Addresses
IPv6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
Compressed: 2001:db8:85a3::8a2e:370:7334
Loopback: ::1
Link-local: fe80::1

### Private Networks
Internal server: 10.1.2.3
Office network: 192.168.10.55
VPN gateway: 172.20.0.1
Development: 10.0.1.100

### Internal FQDNs
Database: db01.corp.acme.com
API server: api.internal.company.local
File server: files.prod.acme.lan
Mail server: mail.corp.example.internal

### URLs with Credentials
Database URL: https://admin:password123@db.company.com:5432/mydb
API endpoint: https://api_user:secret_key@api.internal.com/v1
Git repo: https://username:token@git.company.com/repo.git

### Basic Auth Headers
Authorization: Basic YWRtaW46cGFzc3dvcmQ=
Auth header: Authorization: Basic dXNlcjpzZWNyZXQ=

## Log & Config Artifacts
## =======================

### UUIDs
Request ID: 123e4567-e89b-12d3-a456-426614174000
Session: 550e8400-e29b-41d4-a716-446655440000
Transaction: f47ac10b-58cc-4372-a567-0e02b2c3d479

### CloudWatch Log Groups
arn:aws:logs:us-east-1:123456789012:log-group:/aws/lambda/my-function
arn:aws:logs:eu-west-1:987654321098:log-group:/aws/apigateway/my-api

### RDS Endpoints
Database: mydb.c1234567890.us-east-1.rds.amazonaws.com
Cluster: aurora-cluster.cluster-c1234567890.eu-west-1.rds.amazonaws.com

### Kubernetes Secrets
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm

### Environment Variables
export DATABASE_URL=postgres://user:pass@localhost:5432/db
export API_SECRET_KEY=super_secret_key_12345
export REDIS_PASSWORD=redis_password_here
export JWT_SECRET=jwt_secret_token_abcdef

## Complex Real-World Examples
## ===========================

### Application Configuration
{
  "database": {
    "host": "db.internal.company.com",
    "user": "app_user",
    "password": "db_password_123",
    "connection_string": "postgres://app_user:db_password_123@10.1.2.3:5432/myapp"
  },
  "aws": {
    "access_key": "AKIAIOSFODNN7EXAMPLE",
    "secret_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
    "region": "us-east-1",
    "account_id": "123456789012"
  },
  "stripe": {
    "secret_key": "sk_live_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123",
    "webhook_secret": "whsec_1234567890abcdef"
  }
}

### Log Entry with Multiple Secrets
2025-01-15T10:30:45Z INFO [auth-service] User login attempt
  - Email: user@company.com
  - IP: 192.168.1.100
  - Session: 123e4567-e89b-12d3-a456-426614174000
  - JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

### Error Stack Trace
Exception in thread "main" java.sql.SQLException: Connection failed
  at DatabaseConnection.connect(DatabaseConnection.java:45)
  Connection string: jdbc:postgresql://10.1.2.3:5432/mydb?user=dbuser&password=dbpass123
  AWS Account: 123456789012
  Instance: i-0abc1234def567890

### Docker Compose with Secrets
version: '3.8'
services:
  app:
    environment:
      - DATABASE_URL=postgres://user:password@db.internal.com:5432/app
      - REDIS_URL=redis://redis:password123@cache.internal.com:6379
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - STRIPE_SECRET_KEY=sk_live_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123

### Customer Data Leak
Customer Support Ticket #12345:
  Name: John Smith
  Email: john.smith@customer.com
  Phone: +1-555-987-6543
  SSN: 123-45-6789
  Credit Card: 4111-1111-1111-1111
  Address: 123 Main St, Anytown, ST 12345

### Infrastructure as Code
resource "aws_instance" "web" {
  ami           = "ami-0c55b159cbfafe1d0"
  instance_type = "t2.micro"
  vpc_security_group_ids = ["sg-0123456789abcdef0"]
  subnet_id     = "subnet-0123456789abcdef0"
  
  user_data = <<-EOF
    #!/bin/bash
    export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
    export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    export DATABASE_URL=postgres://admin:secret@db.internal.com:5432/app
  EOF
}

## Edge Cases & Variations
## =======================

### Mixed Format Examples
Phone variations: 555-123-4567, (555) 123-4567, 555.123.4567, +1 555 123 4567
Email variations: user@domain.com, user.name@sub.domain.co.uk, user+tag@domain.org
IP variations: 192.168.1.1, 10.0.0.1, 172.16.0.1, 203.0.113.42

### Embedded in URLs and Paths
https://AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY@s3.amazonaws.com/bucket
/home/user/.aws/credentials contains AKIAIOSFODNN7EXAMPLE
API call to https://api.stripe.com with sk_live_51H7z2bA7g6Q9CmrwWjhcD2QDxyz123

### False Positive Tests (should NOT be masked)
Version numbers: 1.2.3, v2.0.1
Build numbers: build-123456789012 (12 digits but not AWS account)
Random strings: abcdef123456 (not a real token)
File extensions: .jpg, .png, .pdf
Normal text: "The quick brown fox jumps over the lazy dog"